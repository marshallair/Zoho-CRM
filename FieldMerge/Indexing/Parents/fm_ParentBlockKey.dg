string standalone.ParentBlockKey(String strResultsMap)
{
// USAGE
// standalone.ParentBlock(ResultsMap).toList()

// TEST
// strResultsMap='{[0]:"root element",[0,2]:"third sequential element of first embedded level",[0,2,1]:"second sequential element of third sequential element of third embedded level above root",[0,2,1,10]:"fifth sequential element"}';
// Blocks=InputMap.toMap();
//
// ERROR CHECKS
//
// DEFAULTS
//
// VARIABLES
//
// FUNCTION
//  Get keys list
ParentBlockKey = strResultsMap.toMap().keys();
//  Trivial result
if(ParentBlockKey.size() <= 1)
{
	return null;
}
// sort of cheat by using list ParentBlockKey two ways - above to get keys list, and below to get key (which is in itself a list)
ParentBlockKey = ParentBlockKey.get(ParentBlockKey.size() - 1).toList();
// we assume there is a parent block without checking
ParentBlockKey.remove(ParentBlockKey.size() - 1);
return ParentBlockKey;
}